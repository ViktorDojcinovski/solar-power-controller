name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write #OIDC to AWS
  contents: read

env:
  AWS_REGION: eu-central-1
  ECR_REPO_NAME: power-controller-app
  TF_WORKING_DIR: infra

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build backend image
        working-directory: app/backend
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:backend-${{ github.sha }} .

      - name: Scan backend image (Trivy)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:backend-${{ github.sha }}
          format: "table"
          exit-code: "0"
          vuln-type: "os,library"

      - name: Push backend image
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:backend-${{ github.sha }}

      - name: Export iamage URI
        id: out
        run: |
          echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:backend-${{ github.sha }}" >> $GITHUB_ENV

  terraform-plan-apply:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment:
      name: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -var "image_uri=${{ needs.build-and-push.outputs.image_uri }}"

      - name: Terraform Apply (manual approval)
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -var "image_uri=${{ needs.build-and-push.outputs.image_uri }}"
